# ------------------------------------------------------------------------------
# ireg 3.2 (rev 13635e2f) configuration for segmentation pipeline
#
# The current pipeline uses cog+rreg+areg+nreg, which all could be replaced by
# a single call to ireg using this configuration. The running time of ireg is
# significantly shorter, depending on image size and no. of CPUs (< 15min).
#
# See below for a detailed documentation of the configuration file format,
# most common parameters, as well as some more advanced settings.

[ input ]
Background value = -1 # used for cropping of input images
Padding value    = -1 # defines foreground for which to evaluate image similarity

[ transformation ]
Interpolation mode    = Fast linear with padding
Transformation model  = Similarity+Affine+FFD
Control point spacing = 2.5 # *final* control point spacing

[ energy function ]
Energy function = NMI(I(1), I(2) o T) + SSD[GM Sim](I(3), I(4) o T) + .003 BE[Bending energy](T)

[ optimization ]
Maximum streak of rejected steps = 1


# Format
# ======
#
# Parameters are specified as key = value pairs, where parameter
# names start with a capital letter and are otherwise all lowercase.
#
#   <parameter name> = <parameter value>
#
# Section headers may be used to group settings:
#
#   [ <section name> ]
#
# These are mainly optional and can contain any section name. Parameters following
# a registration level selector apply only to this registration level. After a new
# section header or if no level was specified at the top of the configuration
# file or if the level is set to 0, the parameters apply to all leve$NEOSEGDIR/parameters/ireg.cfgls.
#
# If the section name ends with "...", this string is used as common prefix for
# the parameters in this section. It is useful for settings that apply to a
# particular objective function term, where each parameter name starts with the
# name of the respective term, e.g.,
#
#   [ Point set distance... ]
#   Correspondence        = Robust closest point
#   Correspondence update = Alternating
#   Function              = Perona-Malik
#   No. of target samples = 1000
#   No. of source samples = 1000
#
# is equivalent to
#
#   Point set distance correspondence        = Robust closest point
#   Point set distance correspondence update = Alternating
#   Point set distance function              = Perona-Malik
#   Point set distance no. of target samples = 1000
#   Point set distance no. of source samples = 1000
#
# To select a registration level, preceed the section with
# the level specific settings with either one of the following:
#
#   [ level <n> ]
#   [ registration level <n> ]
#   Registration level = <n>
#
# The number of registration/resolution levels is specified using
#
#   No. of registration levels = 4
#
# In most brain registration cases, the default Gaussian image pyramid with
# four levels performs well, with a default control point spacing at the
# highest resolution level of four times the minimum voxel size. At the
# final level, the input images are registered without any blurring.
#
#
# Input settings
# ==============
# 
#   [ input ]
#
#   # Intensities equal or below this value are ignored
#   # during the construction of the image resolution pyramid.
#   # Only the image region within the smallest axes-aligned
#   # bounding box enclosing the intensities above this
#   # threshold is registered, which may reduce the size of
#   # the input image and thus result in a shorter run time.
#   Background value = 0
# 
#   # This value is used to pad the transformed images where
#   # the transformed voxel position is outside the finite
#   # domain of the untransformed image. If the used image
#   # interpolation mode is set to "<mode> with padding",
#   # only intensities above this threshold are considered
#   # by the image interpolation function. This excludes
#   # any non-foreground values from the interpolation.
#   # The padding value further defines the foreground region
#   # for which the image dissimilarity metrics are evaluated.
#   # Intensities equal or below it have no influence on the
#   # registration energy and thus final transformation.
#   Padding value = 0
#
#
# Transformation model
# ====================
#
#   [ transformation ]
#
#   # Select the interpolation mode used for resampling images on the discrete
#   # target image lattice. Valid interpolation modes are:
#   # - NN (nearest neighbor)
#   # - Linear
#   # - Fast linear (default)
#   # - BSpline
#   # - CSpline
#   # - Sinc
#   #
#   #
#   Interpolation mode = Fast linear
#
#   # Defines the parametric transformation model and thus the no. of free
#   # parameters of the objective function to be optimized. Multiple models
#   # can be chained by concatenating the different models using a "+" sign.
#   # The default is "Rigid+Affine+FFD".
#   #
#   # Available transformation models are:
#   # - Rigid (translation, rotation)
#   # - Similarity (translation, rotation, isotropic scaling)
#   # - Affine (translation, rotation, anisotropic scaling, shearing)
#   # - FFD (classic B-spline free-form deformation)
#   # - SVFFD (B-spline function of stationary velocity field, diffeomorphic)
#   Transformation model = FFD
#
#   # In case of the "Affine" transformation, the following settings can be used
#   # to select explicitly which of the 12 parameters to optimized for, where
#   # <operation> can be any of "translation(s)", "rotation(s)", "scaling",
#   # or "shearing".
#   #
#   #   Allow <operation>      = <Yes|No>
#   #   Allow <operation> in X = <Yes|No>
#   #   Allow <operation> in Y = <Yes|No>
#   #   Allow <operation> in Z = <Yes|No>
#   Allow rotations     = No
#   Allow rotation in X = Yes
#   Allow shearing      = No
#
#   # In case of a FFD transformation, a different control point spacing can be
#   # specified for each resolution level. In most cases, however, the desired
#   # spacing on the last resolution level is specified, which is divided by two
#   # for each preceeding level.
#   #
#   # Note: Unlike the configuration for nreg, this parameter specified the
#   #       *final* control point spacing. Hence, a final control point spacing
#   #       of 2.5mm results in a FFD resolution pyramid of 20mm, 10mm, 5mm,
#   #       and 2.5mm in case of four resolution levels.
#   Control point spacing = 2.5
#
#
# Energy function
# ===============
#
# The objective of the registration is defined by a configurable energy function,
# which contains data fidelity terms and regularization term, each weighted by
# a given weight factor. The default energy function is suitable for most common
# registrations. See the advanced settings section for details on how to specify
# a custom objective function.
#
#    # Image (dis-)similarity measure
#    #
#    # - SSD (sum-of-squared difference/mean squared error)
#    # - LNCC (local normalized cross-correlation)
#    # - NMI (normalized mutual information)
#    Image dissimilarity measure = NMI
#
#    # No. of bins to use for probabilistic image dissimilarity measures (e.g., NMI)
#    No. of bins = 64
#
#    # Weight of image dissimilarity term
#    Image dissimilarity weight = 1
#
#    # Weight of point set distance term
#    #
#    # A point set distance term can be used to register two points sets either
#    # with known (landmarks/fiducial markers) or unknown correspondences and
#    # can be applied to either minimize the distance of point set pairs of the
#    # surfaces of the point set. The input may thus also be a tetrahedral mesh
#    # or more commonly a triangulated surface mesh (e.g., cortical surface).
#    Point set distance weight = 1
#
#    # Weight of bending energy / FFD smoothness term
#    Bending energy weight = .005
#
#    # Weight of Jacobian-based penalty term
#    #
#    # Jacobian determinant values close to zero are penalized by this term,
#    # such that no foldings or singularities in the deformation occur. In case
#    # of the SVFFD transformation model, the Jacobian of the velocity field
#    # is penalized instead of the displacment field.
#    Jacobian penalty weight = .0001
#
#    # Weight of sparsity term
#    #
#    # The sparsity term was introduced in
#    # Shi et al. (2012). Registration using sparse free-form deformations.
#    # MICCAI, 15(Pt 2), 659â€“66.
#    Sparsity weight = .001
#
#
# Optimization
# ============
#
#    # No. of image/FFD resolution levels
#    No. of resolution levels = 4
#
#    # Optimization method to use for minimizing the energy function
#    #
#    # - GD (gradient descent)
#    # - CGD (conjugate gradient descent)
#    # - LBFGS (limited-memory Broyden-Fletcher-Goldfarb-Shanno algorithm)
#    Optimization method = CGD
#
#    # Maximum no. of gradient steps
#    Maximum no. of iterations = 100
#
#    # Maximum consecutive streak of rejected line search steps
#    #
#    # The default line search strategy takes steps along the gradient direction
#    # until no further improvement is found. Whenever a step is rejected, the
#    # step length is reduced, while it is increased when the step was accepted.
#    # This parameter can be used to stop the line search as soon as a specified
#    # no. of steps was rejected even after adjusting the step length. A low
#    # setting results in significanlty fewer energy function evaluations and
#    # thus reduces the run time.
#    Maximum streak of rejected steps = 1
#
#
# Advanced settings
# =================
#
# Image resolution pyramid
# ------------------------
#
# The default image resolution pyramid produces good results for most brain
# registration tasks. It is a standard Gaussian resolution pyramid, where the
# image is blurred with a small Gaussian kernel before each downsampling step.
# Alternatively, the standard deviation of the Gaussian kernel and the desired
# voxel size of the resampled images can be specified explicitly for each
# resolution level as follows. Note that level 1 is the last level with usually
# the highest image resolution. The voxel size of the input image is used
# when a resolution of 0 is specified. The following example resolution
# pyramid demonstrates different valid configuration values.
#
#   [ level 1 ]
#   Blurring   = 0
#   Resolution = 0
#
#   [ level 2 ]
#   Blurring of image 1   = 1
#   Blurring of image 2   = .5
#   Resolution of image 1 = 2
#   Resolution of image 2 = 2
#
#   [ level 3 ]
#   Blurring [mm]   = 2
#   Resolution [mm] = 4
#
#   [ resolution level 4 ]
#   Blurring = 4
#   Resolution = 8
#
# FFD resolution pyramid
# ----------------------
#
# In general it is recommended to subdivide the FFD lattice when moving from
# one level to the next. It is, however, also possible to specify a different
# control point spacing for each level. The previous FFD will be subdivided
# whenever possible. Otherwise, a new FFD is instantiated and pushed onto the
# stack of the used "Mult-level transformation" model. In case of "None",
# the new FFD is initialized based on the displacements of the previous
# resolution levels by minimizing the RMS error of the approximation.
#
#    # Specifies how multiple FFD instances are combined
#    # - None: Output a single FFD
#    # - MFFD: Sum FFDs, i.e, T(x) = T1(x) + T2(x) + ... + Tn(x) (default)
#    # - Fluid: Compose FFDs, i.e., T(x) = Tn o ... o T2 o T1(x)
#    Multi-level transformation = MFFD
#
#    [ level 1 ]
#    Control point spacing = 2.5
#
#    [ level 2 ]
#    Control point spacing = 5
#
#    [ level 3 ]
#    Control point spacing = 10
#
#    [ level 4 ]
#    Control point spacing = 20
