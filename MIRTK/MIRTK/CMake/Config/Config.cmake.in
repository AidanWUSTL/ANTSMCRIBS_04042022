# ==============================================================================
# Medical Image Registration ToolKit (MIRTK)
#
# Copyright 2013-2016 Imperial College London
# Copyright 2013-2016 Andreas Schuh
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ==============================================================================

##############################################################################
# @file  @CONFIG_FILE@
# @brief CMake package configuration file.
#
# @note The @CONFIG_FILE@ file is automatically generated
#       by BASIS from the template file Config.cmake.in which is part of
#       the BASIS package.
#
# Variables in this file have to be prefixed by the name of this package.
# In the default package configuration file of BASIS, which can be included
# here using the \@BASIS_CONFIG\@ variable, this prefix is defined as @c NS
# variable. Moreover, the macro basis_set_config() should be used for
# convenience to set any configuration variable, e.g.,
#
# @code
# basis_set_config (INCLUDE_DIR "\@INCLUDE_DIR_CONFIG\@")
# @endcode
#
# where the variable @c INCLUDE_DIR_CONFIG is set in the ConfigSettings.cmake
# file of the BASIS installation. Note that this statement will set the
# variable ${NS}INCLUDE_DIR, where by default @c NS is the package name
# followed by an underscore (_).
#
# See the Config.cmake.in file of BASIS for details.
#
# @ingroup BasisConfig
##############################################################################

## @addtogroup BasisConfig
# @{

# ============================================================================
# List of requested modules
# ============================================================================

if (MIRTK_FIND_COMPONENTS)
  set(MIRTK_MODULES_REQUESTED "${MIRTK_FIND_COMPONENTS}")
  foreach (_CMP IN ITEMS BASIS CMake)
    list(FIND MIRTK_MODULES_REQUESTED ${_CMP} _IDX)
    if (_IDX EQUAL -1)
      set(_INCLUDE_${_CMP}_MODULES FALSE)
    else ()
      list(REMOVE_ITEM MIRTK_MODULES_REQUESTED ${_CMP})
      set(_INCLUDE_${_CMP}_MODULES TRUE)
    endif ()
  endforeach ()
  unset(_CMP)
  unset(_IDX)
endif ()


@BASIS_CONFIG@

# ============================================================================
# CMake Modules
# ============================================================================

## @brief Directory containing the CMake BASIS Modules
set(BASIS_MODULE_PATH "@BASIS_MODULE_PATH_CONFIG@")

if (EXISTS "${BASIS_MODULE_PATH}/BasisTools.cmake")
  set(MIRTK_BASIS_FOUND TRUE)
else ()
  set(MIRTK_BASIS_FOUND FALSE)
endif ()
if (NOT MIRTK_BASIS_FOUND AND (MIRTK_FIND_REQUIRED_BASIS OR MIRTK_FIND_REQUIRED_CMake))
  message (FATAL_ERROR "Required CMake BASIS Modules of package MIRTK"
                       " could not be found in ${BASIS_MODULE_PATH}!")
endif ()

## @brief Directory containing the MIRTK CMake Modules
set(MIRTK_MODULE_PATH "@MIRTK_MODULE_PATH_CONFIG@")

if (EXISTS "${MIRTK_MODULE_PATH}/mirtkTools.cmake")
  set(MIRTK_CMake_FOUND TRUE)
else ()
  set(MIRTK_CMake_FOUND FALSE)
endif ()
if (NOT MIRTK_CMake_FOUND AND MIRTK_FIND_REQUIRED_CMake)
  message (FATAL_ERROR "Required CMake Modules of package MIRTK"
                       " could not be found in ${MIRTK_MODULE_PATH}!")
endif ()
if (NOT MIRTK_BASIS_FOUND)
  set(MIRTK_CMake_FOUND FALSE)
endif ()

# include requested CMake modules
if (_INCLUDE_BASIS_MODULES OR _INCLUDE_CMake_MODULES)
  if (MIRTK_CMake_FOUND)
    list(APPEND CMAKE_MODULE_PATH "${MIRTK_MODULE_PATH}")
  endif ()
  if (MIRTK_BASIS_FOUND)
    list(APPEND CMAKE_MODULE_PATH "${BASIS_MODULE_PATH}")
  endif ()
  if (_INCLUDE_CMake_MODULES AND MIRTK_CMake_FOUND)
    include(mirtkPolicies NO_POLICY_SCOPE)
  endif ()
  if (MIRTK_BASIS_FOUND)
    include(BasisSettings)
    include(BasisTools)
  endif ()
  if (_INCLUDE_CMake_MODULES AND MIRTK_CMake_FOUND)
    include(mirtkTools)
  endif ()
endif ()

unset(_INCLUDE_BASIS_MODULES)
unset(_INCLUDE_CMake_MODULES)

# ============================================================================
# Common settings
# ============================================================================

## @brief Directory containing the MIRTK command executables
set(MIRTK_TOOLS_DIR "@MIRTK_TOOLS_DIR_CONFIG@")

## @brief Whether to build shared libraries by default
if (NOT DEFINED BUILD_SHARED_LIBS_DEFAULT)
  set(BUILD_SHARED_LIBS_DEFAULT @BUILD_SHARED_LIBS@)
endif ()

## @brief Whether to enable profiling of code execution by default
if (NOT DEFINED WITH_PROFILING_DEFAULT)
  set(WITH_PROFILING_DEFAULT @WITH_PROFILING@)
endif ()

## @brief Whether to build applications by default
if (NOT DEFINED BUILD_APPLICATIONS_DEFAULT)
  set(BUILD_APPLICATIONS_DEFAULT @BUILD_APPLICATIONS@)
endif ()

## @brief Default for WITH_TBB
if (NOT DEFINED WITH_TBB_DEFAULT)
  set(WITH_TBB_DEFAULT @WITH_TBB@)
endif ()

## @brief Default for WITH_VTK
if (NOT DEFINED WITH_VTK_DEFAULT)
  set(WITH_VTK_DEFAULT @WITH_VTK@)
endif ()

## @brief Default for WITH_ZLIB
if (NOT DEFINED WITH_ZLIB_DEFAULT)
  set(WITH_ZLIB_DEFAULT @WITH_ZLIB@)
endif ()


## @}
# end of Doxygen group - keep at end of file
