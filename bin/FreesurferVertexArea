#!/usr/bin/env python3

import numpy
import sys
import os
import freesurfer
import nibabel
import getopt

import GraphUtils

#@profile
def main():
    opts, args = getopt.getopt(sys.argv[1:], "vh", [])

    if len(args) != 2:
        print("The ")
        print(sys.argv[0] + " <surface file> <area file>")
        exit()

    surfaceFile = sys.argv[1]

    if not os.path.isfile(surfaceFile):
        print("Could not find surface file: " + surfaceFile)
        exit()

    WhiteSurf = freesurfer.readSurf(surfaceFile)

    faceNormals, faceAreas, vertexNormals, vertexAreas = GraphUtils.surfaceAreasNormals(WhiteSurf)

    outC = dict()
    outC['numVertices'] = WhiteSurf['vertices'].shape[1]
    outC['numFaces'] = WhiteSurf['faces'].shape[1]
    outC['values'] = numpy.single(vertexAreas)
    #freesurfer.writeCurv(outC, os.path.join(SurfDir, Hemi + '.area'))
    freesurfer.writeCurv(outC, sys.argv[2])

#curArea = freesurfer.readCurv(os.path.join(SurfDir, Hemi + '.area'))

if __name__ == "__main__":
    main()
