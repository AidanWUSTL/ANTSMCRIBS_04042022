#!/usr/bin/env python3

import numpy
import sys
import os
import nibabel

# append python paths
P = os.path.realpath(__file__)
head, tail = os.path.split(P)
sys.path.append(os.path.join(head, '..', 'lib', 'python'))

del P
del head
del tail

import freesurfer

if len(sys.argv) < 4:
    print("Incorrect number of arguments")
    print()
    print("Usage: " + sys.argv[0] + " <GIFti file> <surface file> <fs curv>")
    quit()

GIFTIFileName = sys.argv[1]
surfFileName = sys.argv[2]
outFileName = sys.argv[3]

if not os.path.isfile(GIFTIFileName):
    print("GIFTI file not found")
    quit()
if not os.path.isfile(surfFileName):
    print("Surface file not found")
    quit()

GIFTIData = nibabel.load(GIFTIFileName)
SurfData = freesurfer.readSurf(surfFileName)

outData = dict()
outData['numVertices'] = SurfData['vertices'].shape[1]
outData['numFaces'] = SurfData['faces'].shape[1]

if GIFTIFileName.endswith('shape.gii'):
    D = GIFTIData.darrays
    if not len(D) == 1:
        print("expecting only one data array")
        exit()
    outData['values'] = numpy.array(GIFTIData.darrays[0].data)

freesurfer.writeCurv(outData, outFileName)
