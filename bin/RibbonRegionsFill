#!/usr/bin/env python3

import numpy
import sys
import os
import nibabel
import scipy.ndimage

def ismember(A, B):
    return numpy.reshape(numpy.in1d(A.ravel(), numpy.array(B)), A.shape)

if len(sys.argv) < 2:
    print("Usage: " + sys.argv[0] + " <subject id>")
    quit()


subjID = sys.argv[1]

TissueSegDir = 'TissueSegMCRIBS'

LabelFusionNII = nibabel.load(os.path.join(TissueSegDir, subjID, subjID + "_labelfusionimage_dkt.nii.gz"))
LabelFusionIMG = numpy.int16(LabelFusionNII.get_fdata())

RibbonNII = nibabel.load(os.path.join(TissueSegDir, subjID, subjID + "_majority_dkt_compositereg_ribbon.nii.gz"))
RibbonIMG = numpy.int16(RibbonNII.get_fdata())

WMMaskIMG = ismember(LabelFusionIMG, [2, 41])
GMMaskIMG = ismember(LabelFusionIMG, [3, 42])
CSFMaskIMG = (LabelFusionIMG == 24)

GMMaskIMGClosed = scipy.ndimage.binary_closing(GMMaskIMG, iterations = 3)

# find boundary voxels of WM labels in ribbon
RibbonWMLHDilated = scipy.ndimage.binary_dilation(RibbonIMG == 2, iterations = 1)
RibbonWMRHDilated = scipy.ndimage.binary_dilation(RibbonIMG == 41, iterations = 1)

BoundaryRibbon = numpy.logical_and(RibbonWMLHDilated, RibbonWMRHDilated)

BoundaryRibbonDT = scipy.ndimage.distance_transform_edt(numpy.logical_not(BoundaryRibbon))
GMMaskDT = scipy.ndimage.distance_transform_edt(numpy.logical_not(GMMaskIMGClosed))
VoxelsToReplace = numpy.logical_and(BoundaryRibbonDT < GMMaskDT, ismember(LabelFusionIMG, [14, 4, 43, 28, 60, 24]))
VoxelsToReplace = scipy.ndimage.binary_opening(VoxelsToReplace)
VoxelsToReplace = numpy.logical_or(VoxelsToReplace, ismember(LabelFusionIMG, [4, 43, 31, 63, 51, 52, 12, 13, 11, 50, 18, 54, 17, 53, 9, 48]))
NewLabelFusionIMG = numpy.array(LabelFusionIMG)
NewLabelFusionIMG[VoxelsToReplace] = RibbonIMG[VoxelsToReplace]

RibbonWMLHDT = scipy.ndimage.distance_transform_edt(LabelFusionIMG != 2)
RibbonWMRHDT = scipy.ndimage.distance_transform_edt(LabelFusionIMG != 41)

NewLabelFusionIMG[numpy.logical_and(LabelFusionIMG == 14, RibbonWMLHDT < RibbonWMRHDT)] = 2
NewLabelFusionIMG[numpy.logical_and(LabelFusionIMG == 14, RibbonWMLHDT >= RibbonWMRHDT)] = 41

NewLabelFusionIMG[LabelFusionIMG == 28] = 2
NewLabelFusionIMG[LabelFusionIMG == 60] = 41

LHGMDilated = scipy.ndimage.binary_dilation(numpy.logical_and(LabelFusionIMG >= 1000, LabelFusionIMG <= 1035), iterations = 2)
RHGMDilated = scipy.ndimage.binary_dilation(numpy.logical_and(LabelFusionIMG >= 2000, LabelFusionIMG <= 2035), iterations = 2)

GMMaskIMG = numpy.logical_or(numpy.logical_and(LabelFusionIMG >= 1000, LabelFusionIMG <= 1035), numpy.logical_and(LabelFusionIMG >= 2000, LabelFusionIMG <= 2035))
GMMaskIMG = numpy.logical_or(GMMaskIMG, numpy.logical_or(LabelFusionIMG == 42, LabelFusionIMG == 3))
NotGMMask = numpy.logical_and(numpy.logical_and(LHGMDilated, RHGMDilated), numpy.logical_not(GMMaskIMG))

NewLabelFusionIMG[numpy.logical_and(NotGMMask, RibbonWMLHDT < RibbonWMRHDT)] = 1000
NewLabelFusionIMG[numpy.logical_and(NotGMMask, RibbonWMLHDT >= RibbonWMRHDT)] = 2000

NewLabelFusionIMG[scipy.ndimage.binary_fill_holes(NewLabelFusionIMG == 2)] = 2
NewLabelFusionIMG[scipy.ndimage.binary_fill_holes(NewLabelFusionIMG == 41)] = 41
NewNII = nibabel.Nifti1Image(NewLabelFusionIMG, LabelFusionNII.affine)
nibabel.save(NewNII, os.path.join(TissueSegDir, subjID, subjID + "_labelfusionimage_regions.nii.gz"))

NewNII = nibabel.Nifti1Image(numpy.uint8(VoxelsToReplace), LabelFusionNII.affine)
nibabel.save(NewNII, os.path.join(TissueSegDir, subjID, subjID + "_voxelstoreplace.nii.gz"))
