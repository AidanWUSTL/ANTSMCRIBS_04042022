#!/usr/bin/env python3

import os
import numpy
import scipy.ndimage.morphology
import sys
import nibabel

#print(sys.argv)
if len(sys.argv) < 4:
    print("Usage " + sys.argv[0] + " <infile> <outfile> <label 1> [label 2]...")
    quit()

inFileName = sys.argv[1]
outFileName = sys.argv[2]

if not os.path.isfile(inFileName):
    print("Cannot find input file: " + inFileName)
    quit()

NII = nibabel.load(inFileName)
IMG = numpy.asanyarray(NII.dataobj)

labelsToReplace = sys.argv[3:]
#print(labelsToReplace)
try:
    labelsToReplace = [int(x) for x in labelsToReplace]
except (ValueError, TypeError):
    print("One or more labels are not integers")
    quit()

labelsToReplace = numpy.array(labelsToReplace)
labelsToReplace = numpy.unique(labelsToReplace)

labelMask = numpy.reshape(numpy.in1d(IMG.ravel(), labelsToReplace), IMG.shape)

D, indices = scipy.ndimage.morphology.distance_transform_edt(labelMask, sampling = NII.header.get_zooms(), return_distances = True, return_indices = True)
N = IMG[(indices[0], indices[1], indices[2])]

NewIMG = nibabel.Nifti1Image(N, NII.affine, NII.header)
nibabel.save(NewIMG, outFileName)
